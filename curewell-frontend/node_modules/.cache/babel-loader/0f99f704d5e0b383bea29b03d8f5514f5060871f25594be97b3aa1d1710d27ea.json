{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shett\\\\training-projects\\\\curewell-frontend\\\\src\\\\components\\\\updatedoc\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\"; // useParams to get ID from URL\nimport { Button, Form, Container, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateDoc = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Get doctor ID from URL\n  const [doctorName, setDoctorName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const token = localStorage.getItem(\"token\"); // Get token from localStorage\n\n  useEffect(() => {\n    if (!token) {\n      setError(\"Unauthorized! Please log in.\");\n      return;\n    }\n\n    // Fetch doctor details if token exists\n    const fetchDoctorDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/doctors/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDoctorName(response.data.docname); // Assuming the API returns { docid, docname }\n      } catch (err) {\n        setError(\"Failed to fetch doctor details.\");\n      }\n    };\n    fetchDoctorDetails();\n  }, [id, token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!doctorName.trim()) {\n      setError(\"Please enter a doctor name.\");\n      return;\n    }\n    const doctorUpdatePayload = {\n      doctorName: doctorName // Send only the updated name\n    };\n    try {\n      await axios.put(`http://localhost:8080/doctors/${id}`,\n      // Use `id` from URL\n      doctorUpdatePayload, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setSuccess(\"Doctor updated successfully!\");\n      setError(null);\n      setTimeout(() => navigate(\"/viewdoc\"), 1500); // Redirect after success\n    } catch (err) {\n      setError(\"Failed to update doctor. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Update Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Doctor Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter doctor's name\",\n          value: doctorName,\n          onChange: e => setDoctorName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        className: \"w-100\",\n        children: \"Update Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateDoc, \"BDa+ntc5Ur4YRvFKku2wKxRuFFY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateDoc;\nexport default UpdateDoc;\nvar _c;\n$RefreshReg$(_c, \"UpdateDoc\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useParams","Button","Form","Container","Alert","axios","jsxDEV","_jsxDEV","UpdateDoc","_s","navigate","id","doctorName","setDoctorName","error","setError","success","setSuccess","token","localStorage","getItem","fetchDoctorDetails","response","get","headers","Authorization","data","docname","err","handleSubmit","e","preventDefault","trim","doctorUpdatePayload","put","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/shett/training-projects/curewell-frontend/src/components/updatedoc/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"; // useParams to get ID from URL\r\nimport { Button, Form, Container, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst UpdateDoc = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Get doctor ID from URL\r\n  const [doctorName, setDoctorName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const token = localStorage.getItem(\"token\"); // Get token from localStorage\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setError(\"Unauthorized! Please log in.\");\r\n      return;\r\n    }\r\n\r\n    // Fetch doctor details if token exists\r\n    const fetchDoctorDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/doctors/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        setDoctorName(response.data.docname); // Assuming the API returns { docid, docname }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch doctor details.\");\r\n      }\r\n    };\r\n\r\n    fetchDoctorDetails();\r\n  }, [id, token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!doctorName.trim()) {\r\n      setError(\"Please enter a doctor name.\");\r\n      return;\r\n    }\r\n\r\n    const doctorUpdatePayload = {\r\n      doctorName: doctorName, // Send only the updated name\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:8080/doctors/${id}`, // Use `id` from URL\r\n        doctorUpdatePayload,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setSuccess(\"Doctor updated successfully!\");\r\n      setError(null);\r\n      setTimeout(() => navigate(\"/viewdoc\"), 1500); // Redirect after success\r\n    } catch (err) {\r\n      setError(\"Failed to update doctor. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"text-center mb-4\">Update Doctor</h2>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {success && <Alert variant=\"success\">{success}</Alert>}\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Doctor Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter doctor's name\"\r\n            value={doctorName}\r\n            onChange={(e) => setDoctorName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"success\" type=\"submit\" className=\"w-100\">\r\n          Update Doctor\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateDoc;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}