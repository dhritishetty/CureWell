{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shett\\\\training-projects\\\\curewell-frontend\\\\src\\\\components\\\\adddoc\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Form, Container, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddDoc = () => {\n  _s();\n  const navigate = useNavigate();\n  const [doctorName, setDoctorName] = useState(\"\");\n  const [specializations, setSpecializations] = useState([]);\n  const [selectedSpec, setSelectedSpec] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const token = localStorage.getItem(\"token\"); // Getting the token from localStorage\n\n  useEffect(() => {\n    // Fetch specializations if token exists\n    const fetchSpecializations = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/specialisations\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // Adding the token for authorization\n        });\n        setSpecializations(response.data); // Storing the fetched specializations\n      } catch (err) {\n        setError(\"Failed to fetch specializations\"); // Handling error if fetching fails\n      }\n    };\n    if (token) {\n      fetchSpecializations();\n    } else {\n      setError(\"Unauthorized! Please log in.\");\n    }\n  }, [token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!doctorName || !selectedSpec) {\n      setError(\"Please enter doctor name and select a specialization.\");\n      return;\n    }\n    try {\n      // Step 1: Add doctor\n      const doctorResponse = await axios.post(\"http://localhost:8080/doctors\", {\n        doctorName: doctorName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const doctorId = doctorResponse.data.doctorId; // Using doctorId returned by the API\n\n      // Step 2: Add doctor-specialization relationship\n      await axios.post(\"http://localhost:8080/doctor-specializations\", {\n        doctorId: doctorId,\n        specializationId: selectedSpec,\n        specializationDate: new Date().toISOString().split(\"T\")[0] // Assuming you want the current date for specialization date\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setSuccess(\"Doctor added successfully!\");\n      setDoctorName(\"\");\n      setSelectedSpec(\"\");\n      setError(null);\n\n      // Redirect to View Doctors page after success\n      setTimeout(() => navigate(\"/viewdoc\"), 1500);\n    } catch (err) {\n      setError(\"Failed to add doctor. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Add Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Doctor Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter doctor's name\",\n          value: doctorName,\n          onChange: e => setDoctorName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Specialization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: selectedSpec,\n          onChange: e => setSelectedSpec(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Specialization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), specializations.map(spec => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: spec.specCode,\n            children: [spec.specName, \" \"]\n          }, spec.specCode, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        className: \"w-100\",\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AddDoc, \"X+uTesx6mp0K26PS5FMAS+Hn0q0=\", false, function () {\n  return [useNavigate];\n});\n_c = AddDoc;\nexport default AddDoc;\nvar _c;\n$RefreshReg$(_c, \"AddDoc\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Button","Form","Container","Alert","axios","jsxDEV","_jsxDEV","AddDoc","_s","navigate","doctorName","setDoctorName","specializations","setSpecializations","selectedSpec","setSelectedSpec","error","setError","success","setSuccess","token","localStorage","getItem","fetchSpecializations","response","get","headers","Authorization","data","err","handleSubmit","e","preventDefault","doctorResponse","post","doctorId","specializationId","specializationDate","Date","toISOString","split","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","required","Select","map","spec","specCode","specName","_c","$RefreshReg$"],"sources":["C:/Users/shett/training-projects/curewell-frontend/src/components/adddoc/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Form, Container, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst AddDoc = () => {\r\n  const navigate = useNavigate();\r\n  const [doctorName, setDoctorName] = useState(\"\");\r\n  const [specializations, setSpecializations] = useState([]);\r\n  const [selectedSpec, setSelectedSpec] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const token = localStorage.getItem(\"token\"); // Getting the token from localStorage\r\n\r\n  useEffect(() => {\r\n    // Fetch specializations if token exists\r\n    const fetchSpecializations = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/specialisations\", {\r\n          headers: { Authorization: `Bearer ${token}` }, // Adding the token for authorization\r\n        });\r\n        setSpecializations(response.data); // Storing the fetched specializations\r\n      } catch (err) {\r\n        setError(\"Failed to fetch specializations\"); // Handling error if fetching fails\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchSpecializations();\r\n    } else {\r\n      setError(\"Unauthorized! Please log in.\");\r\n    }\r\n  }, [token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!doctorName || !selectedSpec) {\r\n      setError(\"Please enter doctor name and select a specialization.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Step 1: Add doctor\r\n      const doctorResponse = await axios.post(\r\n        \"http://localhost:8080/doctors\",\r\n        { doctorName: doctorName },\r\n        { headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" } }\r\n      );\r\n\r\n      const doctorId = doctorResponse.data.doctorId; // Using doctorId returned by the API\r\n\r\n      // Step 2: Add doctor-specialization relationship\r\n      await axios.post(\r\n        \"http://localhost:8080/doctor-specializations\",\r\n        {\r\n          doctorId: doctorId,\r\n          specializationId: selectedSpec,\r\n          specializationDate: new Date().toISOString().split(\"T\")[0], // Assuming you want the current date for specialization date\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" } }\r\n      );\r\n\r\n      setSuccess(\"Doctor added successfully!\");\r\n      setDoctorName(\"\");\r\n      setSelectedSpec(\"\");\r\n      setError(null);\r\n\r\n      // Redirect to View Doctors page after success\r\n      setTimeout(() => navigate(\"/viewdoc\"), 1500);\r\n    } catch (err) {\r\n      setError(\"Failed to add doctor. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"text-center mb-4\">Add Doctor</h2>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {success && <Alert variant=\"success\">{success}</Alert>}\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Doctor Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter doctor's name\"\r\n            value={doctorName}\r\n            onChange={(e) => setDoctorName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Specialization</Form.Label>\r\n          <Form.Select value={selectedSpec} onChange={(e) => setSelectedSpec(e.target.value)} required>\r\n            <option value=\"\">Select Specialization</option>\r\n            {specializations.map((spec) => (\r\n              <option key={spec.specCode} value={spec.specCode}>\r\n                {spec.specName} {/* Adjusted to match the API response */}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"success\" type=\"submit\" className=\"w-100\">\r\n          Add Doctor\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddDoc;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}