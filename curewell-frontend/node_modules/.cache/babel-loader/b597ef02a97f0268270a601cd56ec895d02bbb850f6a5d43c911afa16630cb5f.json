{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shett\\\\training-projects\\\\curewell-frontend\\\\src\\\\components\\\\updatespec\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateSpecialisation = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [specName, setSpecName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    const fetchSpecialisation = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/specialisations/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setSpecName(response.data.specName);\n      } catch {\n        setError(\"Failed to fetch specialisation details.\");\n      }\n    };\n    fetchSpecialisation();\n  }, [id, token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(null);\n    try {\n      await axios.put(`http://localhost:8080/specialisations/${id}`, {\n        specName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess(\"Specialisation updated successfully!\");\n      setTimeout(() => navigate(\"/viewspecialisation\"), 2000);\n    } catch {\n      setError(\"Failed to update specialisation.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Update Specialisation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Specialisation Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: specName,\n          onChange: e => setSpecName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update Specialisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateSpecialisation, \"EvElisdMGSIAsfnI+QSBgdpvemc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateSpecialisation;\nexport default UpdateSpecialisation;\nvar _c;\n$RefreshReg$(_c, \"UpdateSpecialisation\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useParams","Form","Button","Container","Alert","axios","jsxDEV","_jsxDEV","UpdateSpecialisation","_s","id","specName","setSpecName","error","setError","success","setSuccess","navigate","token","localStorage","getItem","fetchSpecialisation","response","get","headers","Authorization","data","handleSubmit","e","preventDefault","put","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/shett/training-projects/curewell-frontend/src/components/updatespec/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst UpdateSpecialisation = () => {\r\n  const { id } = useParams();\r\n  const [specName, setSpecName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    const fetchSpecialisation = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/specialisations/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setSpecName(response.data.specName);\r\n      } catch {\r\n        setError(\"Failed to fetch specialisation details.\");\r\n      }\r\n    };\r\n\r\n    fetchSpecialisation();\r\n  }, [id, token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:8080/specialisations/${id}`,\r\n        { specName },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      setSuccess(\"Specialisation updated successfully!\");\r\n      setTimeout(() => navigate(\"/viewspecialisation\"), 2000);\r\n    } catch {\r\n      setError(\"Failed to update specialisation.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"text-center mb-4\">Update Specialisation</h2>\r\n\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {success && <Alert variant=\"success\">{success}</Alert>}\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Specialisation Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={specName}\r\n            onChange={(e) => setSpecName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update Specialisation\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateSpecialisation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}